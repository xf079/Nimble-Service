// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// 用户表
model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String?
  password  String
  roles     UserRole[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// 角色表
model Role {
  id          Int          @id @default(autoincrement())
  name        String       @unique
  description String?
  permissions RolePermission[]
  users       UserRole[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

// 权限表
model Permission {
  id          Int          @id @default(autoincrement())
  name        String       @unique  // 例如: "create:user", "read:post"
  description String?
  roles       RolePermission[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

// 用户-角色关联表
model UserRole {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  role      Role     @relation(fields: [roleId], references: [id])
  roleId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, roleId])
}

// 角色-权限关联表
model RolePermission {
  id           Int        @id @default(autoincrement())
  role         Role       @relation(fields: [roleId], references: [id])
  roleId       Int
  permission   Permission @relation(fields: [permissionId], references: [id])
  permissionId Int
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt

  @@unique([roleId, permissionId])
}
